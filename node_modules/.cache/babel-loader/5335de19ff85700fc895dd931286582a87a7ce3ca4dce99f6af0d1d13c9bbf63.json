{"ast":null,"code":"var _jsxFileName = \"/Users/Joo/01_Projects/blob_costs/src/components/CostAssumptionsModal.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Dialog, DialogTitle, DialogContent, DialogActions, Button, TextField, Typography, Grid, Box, Tab, Tabs, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, IconButton, Tooltip } from '@mui/material';\nimport InfoOutlinedIcon from '@mui/icons-material/InfoOutlined';\nimport RestartAltIcon from '@mui/icons-material/RestartAlt';\nimport { useScenariosContext } from '../contexts/ScenariosContext';\nimport { DEFAULT_PRICING } from '../utils/costCalculator';\n\n// TabPanel component for tab content\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TabPanel(props) {\n  const {\n    children,\n    value,\n    index,\n    ...other\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    role: \"tabpanel\",\n    hidden: value !== index,\n    id: `pricing-tabpanel-${index}`,\n    \"aria-labelledby\": `pricing-tab-${index}`,\n    ...other,\n    children: value === index && /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        py: 3\n      },\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n_c = TabPanel;\nconst CostAssumptionsModal = ({\n  open,\n  onClose\n}) => {\n  _s();\n  const {\n    costAssumptions,\n    updateCostAssumption,\n    resetCostAssumptions\n  } = useScenariosContext();\n  const [tabValue, setTabValue] = React.useState(0);\n  const handleTabChange = (event, newValue) => {\n    setTabValue(newValue);\n  };\n  const formatValue = value => {\n    // For pricing values that are very small (like per 10,000 operations)\n    if (value < 0.001) {\n      return value.toExponential(6);\n    }\n    return value;\n  };\n  const handleInputChange = (category, subcategory, value) => {\n    const numValue = parseFloat(value);\n\n    // Validate numeric input\n    if (isNaN(numValue) || numValue < 0) {\n      return; // Ignore invalid inputs\n    }\n    updateCostAssumption(category, subcategory, numValue);\n  };\n  const handleReset = () => {\n    if (window.confirm('Reset all pricing to default values?')) {\n      resetCostAssumptions();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    open: open,\n    onClose: onClose,\n    maxWidth: \"md\",\n    fullWidth: true,\n    \"aria-labelledby\": \"cost-assumptions-dialog-title\",\n    children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n      id: \"cost-assumptions-dialog-title\",\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        alignItems: \"center\",\n        children: [\"Azure Blob Storage Pricing Assumptions\", /*#__PURE__*/_jsxDEV(Tooltip, {\n          title: \"Reset to defaults\",\n          children: /*#__PURE__*/_jsxDEV(IconButton, {\n            edge: \"end\",\n            color: \"primary\",\n            onClick: handleReset,\n            size: \"small\",\n            children: /*#__PURE__*/_jsxDEV(RestartAltIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n      dividers: true,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        paragraph: true,\n        children: \"This calculator uses the following pricing model for Azure Blob Storage. You can adjust these values to match your specific pricing plan or to model different scenarios.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          borderBottom: 1,\n          borderColor: 'divider'\n        },\n        children: /*#__PURE__*/_jsxDEV(Tabs, {\n          value: tabValue,\n          onChange: handleTabChange,\n          \"aria-label\": \"pricing tabs\",\n          children: [/*#__PURE__*/_jsxDEV(Tab, {\n            label: \"Edit Pricing\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Tab, {\n            label: \"Pricing Model Details\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TabPanel, {\n        value: tabValue,\n        index: 0,\n        children: /*#__PURE__*/_jsxDEV(TableContainer, {\n          component: Paper,\n          variant: \"outlined\",\n          children: /*#__PURE__*/_jsxDEV(Table, {\n            size: \"small\",\n            children: [/*#__PURE__*/_jsxDEV(TableHead, {\n              children: /*#__PURE__*/_jsxDEV(TableRow, {\n                children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                  width: \"40%\",\n                  children: /*#__PURE__*/_jsxDEV(Typography, {\n                    fontWeight: \"bold\",\n                    children: \"Category\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 124,\n                    columnNumber: 42\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 124,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  width: \"30%\",\n                  children: /*#__PURE__*/_jsxDEV(Typography, {\n                    fontWeight: \"bold\",\n                    children: \"Value\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 125,\n                    columnNumber: 42\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 125,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  width: \"30%\",\n                  children: /*#__PURE__*/_jsxDEV(Typography, {\n                    fontWeight: \"bold\",\n                    children: \"Unit\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 126,\n                    columnNumber: 42\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 126,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n              children: [/*#__PURE__*/_jsxDEV(TableRow, {\n                children: /*#__PURE__*/_jsxDEV(TableCell, {\n                  colSpan: 3,\n                  children: /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"subtitle2\",\n                    fontWeight: \"bold\",\n                    sx: {\n                      mt: 1\n                    },\n                    children: \"Storage Costs\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 133,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 132,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableRow, {\n                children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                  children: /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body2\",\n                    children: \"Hot Tier\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 140,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 139,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: /*#__PURE__*/_jsxDEV(TextField, {\n                    variant: \"outlined\",\n                    size: \"small\",\n                    type: \"number\",\n                    inputProps: {\n                      step: \"0.001\",\n                      min: 0\n                    },\n                    value: costAssumptions.storage.hotTier,\n                    onChange: e => handleInputChange('storage', 'hotTier', e.target.value),\n                    fullWidth: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 143,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 142,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body2\",\n                    children: \"EUR per GB per month\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 154,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 153,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableRow, {\n                children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                  children: /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body2\",\n                    children: \"Cool Tier\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 159,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 158,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: /*#__PURE__*/_jsxDEV(TextField, {\n                    variant: \"outlined\",\n                    size: \"small\",\n                    type: \"number\",\n                    inputProps: {\n                      step: \"0.001\",\n                      min: 0\n                    },\n                    value: costAssumptions.storage.coolTier,\n                    onChange: e => handleInputChange('storage', 'coolTier', e.target.value),\n                    fullWidth: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 162,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 161,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body2\",\n                    children: \"EUR per GB per month\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 173,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 172,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 157,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableRow, {\n                children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                  children: /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body2\",\n                    children: \"Archive Tier\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 178,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 177,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: /*#__PURE__*/_jsxDEV(TextField, {\n                    variant: \"outlined\",\n                    size: \"small\",\n                    type: \"number\",\n                    inputProps: {\n                      step: \"0.0001\",\n                      min: 0\n                    },\n                    value: costAssumptions.storage.archiveTier,\n                    onChange: e => handleInputChange('storage', 'archiveTier', e.target.value),\n                    fullWidth: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 181,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 180,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body2\",\n                    children: \"EUR per GB per month\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 192,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 191,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 176,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableRow, {\n                children: /*#__PURE__*/_jsxDEV(TableCell, {\n                  colSpan: 3,\n                  children: /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"subtitle2\",\n                    fontWeight: \"bold\",\n                    sx: {\n                      mt: 2\n                    },\n                    children: \"Transaction Costs\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 199,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 198,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 197,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableRow, {\n                children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                  children: /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body2\",\n                    children: \"Read (GET) Operations\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 206,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 205,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: /*#__PURE__*/_jsxDEV(TextField, {\n                    variant: \"outlined\",\n                    size: \"small\",\n                    type: \"number\",\n                    value: formatValue(costAssumptions.transactions.read * 10000),\n                    onChange: e => handleInputChange('transactions', 'read', e.target.value / 10000),\n                    fullWidth: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 209,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 208,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body2\",\n                    children: \"EUR per 10,000 operations\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 219,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 218,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 204,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableRow, {\n                children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                  children: /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body2\",\n                    children: \"Write (PUT/POST) Operations\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 224,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 223,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: /*#__PURE__*/_jsxDEV(TextField, {\n                    variant: \"outlined\",\n                    size: \"small\",\n                    type: \"number\",\n                    value: formatValue(costAssumptions.transactions.write * 10000),\n                    onChange: e => handleInputChange('transactions', 'write', e.target.value / 10000),\n                    fullWidth: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 227,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 226,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body2\",\n                    children: \"EUR per 10,000 operations\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 237,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 236,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 222,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableRow, {\n                children: /*#__PURE__*/_jsxDEV(TableCell, {\n                  colSpan: 3,\n                  children: /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"subtitle2\",\n                    fontWeight: \"bold\",\n                    sx: {\n                      mt: 2\n                    },\n                    children: \"Data Transfer Costs\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 244,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 243,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 242,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableRow, {\n                children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                  children: /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body2\",\n                    children: \"Free Limit\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 251,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 250,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: /*#__PURE__*/_jsxDEV(TextField, {\n                    variant: \"outlined\",\n                    size: \"small\",\n                    type: \"number\",\n                    inputProps: {\n                      step: \"1\",\n                      min: 0\n                    },\n                    value: costAssumptions.dataTransfer.freeLimit,\n                    onChange: e => handleInputChange('dataTransfer', 'freeLimit', e.target.value),\n                    fullWidth: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 254,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 253,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body2\",\n                    children: \"GB per month\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 265,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 264,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 249,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableRow, {\n                children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                  children: /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body2\",\n                    children: \"Outbound Transfer\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 270,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 269,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: /*#__PURE__*/_jsxDEV(TextField, {\n                    variant: \"outlined\",\n                    size: \"small\",\n                    type: \"number\",\n                    inputProps: {\n                      step: \"0.001\",\n                      min: 0\n                    },\n                    value: costAssumptions.dataTransfer.costPerGB,\n                    onChange: e => handleInputChange('dataTransfer', 'costPerGB', e.target.value),\n                    fullWidth: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 273,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 272,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body2\",\n                    children: \"EUR per GB\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 284,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 283,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 268,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TabPanel, {\n        value: tabValue,\n        index: 1,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"subtitle1\",\n          gutterBottom: true,\n          children: \"Azure Blob Storage Pricing Model Explained\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          paragraph: true,\n          children: \"The calculator uses the following pricing components to estimate Azure Blob Storage costs:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"subtitle2\",\n          gutterBottom: true,\n          children: \"1. Storage Costs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          paragraph: true,\n          children: [\"Storage costs are calculated based on how much data you store and which tier it's stored in:\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 13\n          }, this), \"\\u2022 \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Hot Tier:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 21\n          }, this), \" Optimized for frequently accessed data (\", DEFAULT_PRICING.storage.hotTier, \" EUR per GB/month).\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 308,\n            columnNumber: 13\n          }, this), \"\\u2022 \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Cool Tier:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 308,\n            columnNumber: 21\n          }, this), \" Optimized for infrequently accessed data stored for at least 30 days (\", DEFAULT_PRICING.storage.coolTier, \" EUR per GB/month).\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 13\n          }, this), \"\\u2022 \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Archive Tier:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 21\n          }, this), \" Lowest cost option for rarely accessed data with flexible latency requirements (\", DEFAULT_PRICING.storage.archiveTier, \" EUR per GB/month).\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"subtitle2\",\n          gutterBottom: true,\n          children: \"2. Transaction Costs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          paragraph: true,\n          children: [\"Costs associated with reading from and writing to storage:\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 317,\n            columnNumber: 13\n          }, this), \"\\u2022 \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Read Operations:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 317,\n            columnNumber: 21\n          }, this), \" GET requests to retrieve data (\", DEFAULT_PRICING.transactions.read * 10000, \" EUR per 10,000 operations).\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 318,\n            columnNumber: 13\n          }, this), \"\\u2022 \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Write Operations:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 318,\n            columnNumber: 21\n          }, this), \" PUT/POST requests to store data (\", DEFAULT_PRICING.transactions.write * 10000, \" EUR per 10,000 operations).\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"subtitle2\",\n          gutterBottom: true,\n          children: \"3. Data Transfer Costs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          paragraph: true,\n          children: [\"Costs for transferring data out of Azure:\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 13\n          }, this), \"\\u2022 \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Free Tier:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 21\n          }, this), \" First \", DEFAULT_PRICING.dataTransfer.freeLimit, \" GB per month are free.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 327,\n            columnNumber: 13\n          }, this), \"\\u2022 \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Additional Outbound:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 327,\n            columnNumber: 21\n          }, this), \" Beyond the free tier, costs \", DEFAULT_PRICING.dataTransfer.costPerGB, \" EUR per GB.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"subtitle2\",\n          gutterBottom: true,\n          children: \"Retention Model\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          paragraph: true,\n          children: [\"The calculator uses a tiered retention model for each project:\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 335,\n            columnNumber: 13\n          }, this), \"\\u2022 New projects start in the Hot tier.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 336,\n            columnNumber: 13\n          }, this), \"\\u2022 After the Hot tier duration, they move to the Cool tier.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 337,\n            columnNumber: 13\n          }, this), \"\\u2022 After the Cool tier duration, they move to the Archive tier.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 338,\n            columnNumber: 13\n          }, this), \"\\u2022 After all tiers, the data is assumed to be deleted.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          paragraph: true,\n          children: /*#__PURE__*/_jsxDEV(\"em\", {\n            children: [\"Note: This model simplifies some aspects of Azure pricing. For precise estimates or specialized scenarios, please refer to the \", /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"https://azure.microsoft.com/en-us/pricing/details/storage/blobs/\",\n              target: \"_blank\",\n              rel: \"noopener noreferrer\",\n              children: \"official Azure pricing calculator\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 342,\n              columnNumber: 144\n            }, this), \".\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 342,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        onClick: onClose,\n        color: \"primary\",\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n};\n_s(CostAssumptionsModal, \"2LR9gNtgWn4mhlxzLZVBTjZVaIE=\", false, function () {\n  return [useScenariosContext];\n});\n_c2 = CostAssumptionsModal;\nexport default CostAssumptionsModal;\nvar _c, _c2;\n$RefreshReg$(_c, \"TabPanel\");\n$RefreshReg$(_c2, \"CostAssumptionsModal\");","map":{"version":3,"names":["React","Dialog","DialogTitle","DialogContent","DialogActions","Button","TextField","Typography","Grid","Box","Tab","Tabs","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","IconButton","Tooltip","InfoOutlinedIcon","RestartAltIcon","useScenariosContext","DEFAULT_PRICING","jsxDEV","_jsxDEV","TabPanel","props","children","value","index","other","role","hidden","id","sx","py","fileName","_jsxFileName","lineNumber","columnNumber","_c","CostAssumptionsModal","open","onClose","_s","costAssumptions","updateCostAssumption","resetCostAssumptions","tabValue","setTabValue","useState","handleTabChange","event","newValue","formatValue","toExponential","handleInputChange","category","subcategory","numValue","parseFloat","isNaN","handleReset","window","confirm","maxWidth","fullWidth","display","justifyContent","alignItems","title","edge","color","onClick","size","dividers","variant","paragraph","borderBottom","borderColor","onChange","label","component","width","fontWeight","colSpan","mt","type","inputProps","step","min","storage","hotTier","e","target","coolTier","archiveTier","transactions","read","write","dataTransfer","freeLimit","costPerGB","gutterBottom","href","rel","_c2","$RefreshReg$"],"sources":["/Users/Joo/01_Projects/blob_costs/src/components/CostAssumptionsModal.js"],"sourcesContent":["import React from 'react';\nimport {\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  Button,\n  TextField,\n  Typography,\n  Grid,\n  Box,\n  Tab,\n  Tabs,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Paper,\n  IconButton,\n  Tooltip,\n} from '@mui/material';\nimport InfoOutlinedIcon from '@mui/icons-material/InfoOutlined';\nimport RestartAltIcon from '@mui/icons-material/RestartAlt';\nimport { useScenariosContext } from '../contexts/ScenariosContext';\nimport { DEFAULT_PRICING } from '../utils/costCalculator';\n\n// TabPanel component for tab content\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`pricing-tabpanel-${index}`}\n      aria-labelledby={`pricing-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box sx={{ py: 3 }}>\n          {children}\n        </Box>\n      )}\n    </div>\n  );\n}\n\nconst CostAssumptionsModal = ({ open, onClose }) => {\n  const { costAssumptions, updateCostAssumption, resetCostAssumptions } = useScenariosContext();\n  const [tabValue, setTabValue] = React.useState(0);\n\n  const handleTabChange = (event, newValue) => {\n    setTabValue(newValue);\n  };\n\n  const formatValue = (value) => {\n    // For pricing values that are very small (like per 10,000 operations)\n    if (value < 0.001) {\n      return value.toExponential(6);\n    }\n    return value;\n  };\n\n  const handleInputChange = (category, subcategory, value) => {\n    const numValue = parseFloat(value);\n    \n    // Validate numeric input\n    if (isNaN(numValue) || numValue < 0) {\n      return; // Ignore invalid inputs\n    }\n    \n    updateCostAssumption(category, subcategory, numValue);\n  };\n\n  const handleReset = () => {\n    if (window.confirm('Reset all pricing to default values?')) {\n      resetCostAssumptions();\n    }\n  };\n\n  return (\n    <Dialog \n      open={open} \n      onClose={onClose} \n      maxWidth=\"md\" \n      fullWidth\n      aria-labelledby=\"cost-assumptions-dialog-title\"\n    >\n      <DialogTitle id=\"cost-assumptions-dialog-title\">\n        <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\n          Azure Blob Storage Pricing Assumptions\n          <Tooltip title=\"Reset to defaults\">\n            <IconButton \n              edge=\"end\" \n              color=\"primary\" \n              onClick={handleReset}\n              size=\"small\"\n            >\n              <RestartAltIcon />\n            </IconButton>\n          </Tooltip>\n        </Box>\n      </DialogTitle>\n      <DialogContent dividers>\n        <Typography variant=\"body2\" paragraph>\n          This calculator uses the following pricing model for Azure Blob Storage. You can adjust these values to match your specific pricing plan or to model different scenarios.\n        </Typography>\n\n        <Box sx={{ borderBottom: 1, borderColor: 'divider' }}>\n          <Tabs value={tabValue} onChange={handleTabChange} aria-label=\"pricing tabs\">\n            <Tab label=\"Edit Pricing\" />\n            <Tab label=\"Pricing Model Details\" />\n          </Tabs>\n        </Box>\n\n        {/* Edit Pricing Tab */}\n        <TabPanel value={tabValue} index={0}>\n          <TableContainer component={Paper} variant=\"outlined\">\n            <Table size=\"small\">\n              <TableHead>\n                <TableRow>\n                  <TableCell width=\"40%\"><Typography fontWeight=\"bold\">Category</Typography></TableCell>\n                  <TableCell width=\"30%\"><Typography fontWeight=\"bold\">Value</Typography></TableCell>\n                  <TableCell width=\"30%\"><Typography fontWeight=\"bold\">Unit</Typography></TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {/* Storage Costs */}\n                <TableRow>\n                  <TableCell colSpan={3}>\n                    <Typography variant=\"subtitle2\" fontWeight=\"bold\" sx={{ mt: 1 }}>\n                      Storage Costs\n                    </Typography>\n                  </TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell>\n                    <Typography variant=\"body2\">Hot Tier</Typography>\n                  </TableCell>\n                  <TableCell>\n                    <TextField\n                      variant=\"outlined\"\n                      size=\"small\"\n                      type=\"number\"\n                      inputProps={{ step: \"0.001\", min: 0 }}\n                      value={costAssumptions.storage.hotTier}\n                      onChange={(e) => handleInputChange('storage', 'hotTier', e.target.value)}\n                      fullWidth\n                    />\n                  </TableCell>\n                  <TableCell>\n                    <Typography variant=\"body2\">EUR per GB per month</Typography>\n                  </TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell>\n                    <Typography variant=\"body2\">Cool Tier</Typography>\n                  </TableCell>\n                  <TableCell>\n                    <TextField\n                      variant=\"outlined\"\n                      size=\"small\"\n                      type=\"number\"\n                      inputProps={{ step: \"0.001\", min: 0 }}\n                      value={costAssumptions.storage.coolTier}\n                      onChange={(e) => handleInputChange('storage', 'coolTier', e.target.value)}\n                      fullWidth\n                    />\n                  </TableCell>\n                  <TableCell>\n                    <Typography variant=\"body2\">EUR per GB per month</Typography>\n                  </TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell>\n                    <Typography variant=\"body2\">Archive Tier</Typography>\n                  </TableCell>\n                  <TableCell>\n                    <TextField\n                      variant=\"outlined\"\n                      size=\"small\"\n                      type=\"number\"\n                      inputProps={{ step: \"0.0001\", min: 0 }}\n                      value={costAssumptions.storage.archiveTier}\n                      onChange={(e) => handleInputChange('storage', 'archiveTier', e.target.value)}\n                      fullWidth\n                    />\n                  </TableCell>\n                  <TableCell>\n                    <Typography variant=\"body2\">EUR per GB per month</Typography>\n                  </TableCell>\n                </TableRow>\n\n                {/* Transaction Costs */}\n                <TableRow>\n                  <TableCell colSpan={3}>\n                    <Typography variant=\"subtitle2\" fontWeight=\"bold\" sx={{ mt: 2 }}>\n                      Transaction Costs\n                    </Typography>\n                  </TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell>\n                    <Typography variant=\"body2\">Read (GET) Operations</Typography>\n                  </TableCell>\n                  <TableCell>\n                    <TextField\n                      variant=\"outlined\"\n                      size=\"small\"\n                      type=\"number\"\n                      value={formatValue(costAssumptions.transactions.read * 10000)}\n                      onChange={(e) => handleInputChange('transactions', 'read', e.target.value / 10000)}\n                      fullWidth\n                    />\n                  </TableCell>\n                  <TableCell>\n                    <Typography variant=\"body2\">EUR per 10,000 operations</Typography>\n                  </TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell>\n                    <Typography variant=\"body2\">Write (PUT/POST) Operations</Typography>\n                  </TableCell>\n                  <TableCell>\n                    <TextField\n                      variant=\"outlined\"\n                      size=\"small\"\n                      type=\"number\"\n                      value={formatValue(costAssumptions.transactions.write * 10000)}\n                      onChange={(e) => handleInputChange('transactions', 'write', e.target.value / 10000)}\n                      fullWidth\n                    />\n                  </TableCell>\n                  <TableCell>\n                    <Typography variant=\"body2\">EUR per 10,000 operations</Typography>\n                  </TableCell>\n                </TableRow>\n\n                {/* Data Transfer Costs */}\n                <TableRow>\n                  <TableCell colSpan={3}>\n                    <Typography variant=\"subtitle2\" fontWeight=\"bold\" sx={{ mt: 2 }}>\n                      Data Transfer Costs\n                    </Typography>\n                  </TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell>\n                    <Typography variant=\"body2\">Free Limit</Typography>\n                  </TableCell>\n                  <TableCell>\n                    <TextField\n                      variant=\"outlined\"\n                      size=\"small\"\n                      type=\"number\"\n                      inputProps={{ step: \"1\", min: 0 }}\n                      value={costAssumptions.dataTransfer.freeLimit}\n                      onChange={(e) => handleInputChange('dataTransfer', 'freeLimit', e.target.value)}\n                      fullWidth\n                    />\n                  </TableCell>\n                  <TableCell>\n                    <Typography variant=\"body2\">GB per month</Typography>\n                  </TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell>\n                    <Typography variant=\"body2\">Outbound Transfer</Typography>\n                  </TableCell>\n                  <TableCell>\n                    <TextField\n                      variant=\"outlined\"\n                      size=\"small\"\n                      type=\"number\"\n                      inputProps={{ step: \"0.001\", min: 0 }}\n                      value={costAssumptions.dataTransfer.costPerGB}\n                      onChange={(e) => handleInputChange('dataTransfer', 'costPerGB', e.target.value)}\n                      fullWidth\n                    />\n                  </TableCell>\n                  <TableCell>\n                    <Typography variant=\"body2\">EUR per GB</Typography>\n                  </TableCell>\n                </TableRow>\n              </TableBody>\n            </Table>\n          </TableContainer>\n        </TabPanel>\n\n        {/* Pricing Details Tab */}\n        <TabPanel value={tabValue} index={1}>\n          <Typography variant=\"subtitle1\" gutterBottom>\n            Azure Blob Storage Pricing Model Explained\n          </Typography>\n          \n          <Typography variant=\"body2\" paragraph>\n            The calculator uses the following pricing components to estimate Azure Blob Storage costs:\n          </Typography>\n          \n          <Typography variant=\"subtitle2\" gutterBottom>\n            1. Storage Costs\n          </Typography>\n          <Typography variant=\"body2\" paragraph>\n            Storage costs are calculated based on how much data you store and which tier it's stored in:\n            <br />• <strong>Hot Tier:</strong> Optimized for frequently accessed data ({DEFAULT_PRICING.storage.hotTier} EUR per GB/month).\n            <br />• <strong>Cool Tier:</strong> Optimized for infrequently accessed data stored for at least 30 days ({DEFAULT_PRICING.storage.coolTier} EUR per GB/month).\n            <br />• <strong>Archive Tier:</strong> Lowest cost option for rarely accessed data with flexible latency requirements ({DEFAULT_PRICING.storage.archiveTier} EUR per GB/month).\n          </Typography>\n          \n          <Typography variant=\"subtitle2\" gutterBottom>\n            2. Transaction Costs\n          </Typography>\n          <Typography variant=\"body2\" paragraph>\n            Costs associated with reading from and writing to storage:\n            <br />• <strong>Read Operations:</strong> GET requests to retrieve data ({DEFAULT_PRICING.transactions.read * 10000} EUR per 10,000 operations).\n            <br />• <strong>Write Operations:</strong> PUT/POST requests to store data ({DEFAULT_PRICING.transactions.write * 10000} EUR per 10,000 operations).\n          </Typography>\n          \n          <Typography variant=\"subtitle2\" gutterBottom>\n            3. Data Transfer Costs\n          </Typography>\n          <Typography variant=\"body2\" paragraph>\n            Costs for transferring data out of Azure:\n            <br />• <strong>Free Tier:</strong> First {DEFAULT_PRICING.dataTransfer.freeLimit} GB per month are free.\n            <br />• <strong>Additional Outbound:</strong> Beyond the free tier, costs {DEFAULT_PRICING.dataTransfer.costPerGB} EUR per GB.\n          </Typography>\n          \n          <Typography variant=\"subtitle2\" gutterBottom>\n            Retention Model\n          </Typography>\n          <Typography variant=\"body2\" paragraph>\n            The calculator uses a tiered retention model for each project:\n            <br />• New projects start in the Hot tier.\n            <br />• After the Hot tier duration, they move to the Cool tier.\n            <br />• After the Cool tier duration, they move to the Archive tier.\n            <br />• After all tiers, the data is assumed to be deleted.\n          </Typography>\n          \n          <Typography variant=\"body2\" paragraph>\n            <em>Note: This model simplifies some aspects of Azure pricing. For precise estimates or specialized scenarios, please refer to the <a href=\"https://azure.microsoft.com/en-us/pricing/details/storage/blobs/\" target=\"_blank\" rel=\"noopener noreferrer\">official Azure pricing calculator</a>.</em>\n          </Typography>\n        </TabPanel>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={onClose} color=\"primary\">\n          Close\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nexport default CostAssumptionsModal; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}