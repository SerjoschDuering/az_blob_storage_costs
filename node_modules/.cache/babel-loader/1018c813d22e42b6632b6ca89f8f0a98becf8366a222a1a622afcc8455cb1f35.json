{"ast":null,"code":"var _jsxFileName = \"/Users/Joo/01_Projects/blob_costs/src/components/ScenarioList.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Box, Card, CardContent, Typography, List, ListItem, ListItemText, IconButton, Chip, Divider, Stack, Button, Collapse,\n// For expanding edit form\nTextField, Slider, Grid, Tooltip // For tooltips on icons\n} from '@mui/material';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport EditIcon from '@mui/icons-material/Edit';\nimport SaveIcon from '@mui/icons-material/Save'; // To indicate saving changes\nimport VisibilityIcon from '@mui/icons-material/Visibility';\nimport VisibilityOffIcon from '@mui/icons-material/VisibilityOff';\nimport AddCircleOutlineIcon from '@mui/icons-material/AddCircleOutline';\nimport SettingsIcon from '@mui/icons-material/Settings';\nimport InfoOutlinedIcon from '@mui/icons-material/InfoOutlined'; // For info tooltips\nimport { useScenariosContext } from '../contexts/ScenariosContext';\nimport CostAssumptionsModal from './CostAssumptionsModal';\n\n// Component for individual scenario parameters (reusable)\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ScenarioParametersForm = ({\n  scenario\n}) => {\n  _s();\n  var _params$numUsers, _params$projectsPerUs, _params$getsPerImageI, _params$dataObjectsPe, _params$avgDataObject, _params$hotTierMonths, _params$coolTierMonth, _params$archiveTierMo;\n  const {\n    updateScenarioParameter,\n    updateScenario\n  } = useScenariosContext();\n  const handleParamChange = (param, value) => {\n    updateScenarioParameter(scenario.id, param, value);\n  };\n  const handleNameChange = event => {\n    updateScenario(scenario.id, {\n      name: event.target.value\n    });\n  };\n  const handleDescriptionChange = event => {\n    updateScenario(scenario.id, {\n      description: event.target.value\n    });\n  };\n\n  // Check if parameters exist before trying to access them\n  const params = scenario.parameters || {};\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      p: 2,\n      borderTop: '1px solid rgba(0, 0, 0, 0.12)',\n      mt: 1\n    },\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Scenario Name\",\n          value: scenario.name,\n          onChange: handleNameChange,\n          fullWidth: true,\n          variant: \"outlined\",\n          size: \"small\",\n          sx: {\n            mb: 2\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Description\",\n          value: scenario.description,\n          onChange: handleDescriptionChange,\n          fullWidth: true,\n          multiline: true,\n          rows: 2,\n          variant: \"outlined\",\n          size: \"small\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 14\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 6,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"overline\",\n          display: \"block\",\n          gutterBottom: true,\n          children: \"Usage\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ParameterSlider, {\n          label: \"Number of Users\",\n          paramKey: \"numUsers\",\n          value: (_params$numUsers = params.numUsers) !== null && _params$numUsers !== void 0 ? _params$numUsers : 10 // Provide default if undefined\n          ,\n          min: 10,\n          max: 1000,\n          step: 10,\n          onChange: handleParamChange,\n          marks: [{\n            value: 10,\n            label: '10'\n          }, {\n            value: 100,\n            label: '100'\n          }, {\n            value: 1000,\n            label: '1k'\n          }]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ParameterSlider, {\n          label: \"New Projects/User/Month\",\n          paramKey: \"projectsPerUserPerMonth\",\n          value: (_params$projectsPerUs = params.projectsPerUserPerMonth) !== null && _params$projectsPerUs !== void 0 ? _params$projectsPerUs : 1,\n          min: 1,\n          max: 20,\n          step: 1,\n          onChange: handleParamChange,\n          marks: [{\n            value: 1,\n            label: '1'\n          }, {\n            value: 10,\n            label: '10'\n          }, {\n            value: 20,\n            label: '20'\n          }]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ParameterSlider, {\n          label: \"GETs/Object (1st month)\",\n          tooltip: \"Number of times each data object is read in its first month\",\n          paramKey: \"getsPerImageInFirstMonth\" // Keep key for now, maybe rename later\n          ,\n          value: (_params$getsPerImageI = params.getsPerImageInFirstMonth) !== null && _params$getsPerImageI !== void 0 ? _params$getsPerImageI : 10,\n          min: 0,\n          max: 50,\n          step: 1,\n          onChange: handleParamChange,\n          marks: [{\n            value: 0,\n            label: '0'\n          }, {\n            value: 15,\n            label: '15'\n          }, {\n            value: 50,\n            label: '50'\n          }]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 14\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 6,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"overline\",\n          display: \"block\",\n          gutterBottom: true,\n          children: \"Data\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ParameterSlider, {\n          label: \"Data Objects/Project\",\n          paramKey: \"dataObjectsPerProject\",\n          value: (_params$dataObjectsPe = params.dataObjectsPerProject) !== null && _params$dataObjectsPe !== void 0 ? _params$dataObjectsPe : 50,\n          min: 10,\n          max: 500,\n          step: 10,\n          onChange: handleParamChange,\n          marks: [{\n            value: 10,\n            label: '10'\n          }, {\n            value: 100,\n            label: '100'\n          }, {\n            value: 500,\n            label: '500'\n          }]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ParameterSlider, {\n          label: \"Avg Object Size (MB)\",\n          paramKey: \"avgDataObjectSizeMB\",\n          value: (_params$avgDataObject = params.avgDataObjectSizeMB) !== null && _params$avgDataObject !== void 0 ? _params$avgDataObject : 1.0,\n          min: 0.1,\n          max: 10.0,\n          step: 0.1,\n          onChange: handleParamChange,\n          marks: [{\n            value: 0.1,\n            label: '0.1'\n          }, {\n            value: 1,\n            label: '1'\n          }, {\n            value: 10,\n            label: '10'\n          }],\n          valueLabelFormat: value => `${value.toFixed(1)} MB`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 14\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"overline\",\n          display: \"block\",\n          gutterBottom: true,\n          sx: {\n            mt: 1\n          },\n          children: \"Storage Tier Duration (Months)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 14\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 4,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Hot\",\n              type: \"number\",\n              value: (_params$hotTierMonths = params.hotTierMonths) !== null && _params$hotTierMonths !== void 0 ? _params$hotTierMonths : 1,\n              onChange: e => handleParamChange('hotTierMonths', Number(e.target.value)),\n              fullWidth: true,\n              size: \"small\",\n              variant: \"outlined\",\n              inputProps: {\n                min: 1,\n                step: 1\n              } // Hot must be >= 1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 18\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 16\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 4,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Cool\",\n              type: \"number\",\n              value: (_params$coolTierMonth = params.coolTierMonths) !== null && _params$coolTierMonth !== void 0 ? _params$coolTierMonth : 3,\n              onChange: e => handleParamChange('coolTierMonths', Number(e.target.value)),\n              fullWidth: true,\n              size: \"small\",\n              variant: \"outlined\",\n              inputProps: {\n                min: 0,\n                step: 1\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 18\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 16\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 4,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Archive\",\n              type: \"number\",\n              value: (_params$archiveTierMo = params.archiveTierMonths) !== null && _params$archiveTierMo !== void 0 ? _params$archiveTierMo : 8,\n              onChange: e => handleParamChange('archiveTierMonths', Number(e.target.value)),\n              fullWidth: true,\n              size: \"small\",\n              variant: \"outlined\",\n              inputProps: {\n                min: 0,\n                step: 1\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 18\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 16\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 14\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 10\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 8\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 6\n  }, this);\n};\n\n// Helper component for sliders to reduce repetition\n_s(ScenarioParametersForm, \"/T96fKFr2sa6m20hC7jEGD3I7ZE=\", false, function () {\n  return [useScenariosContext];\n});\n_c = ScenarioParametersForm;\nconst ParameterSlider = ({\n  label,\n  tooltip,\n  paramKey,\n  value,\n  min,\n  max,\n  step,\n  marks,\n  onChange,\n  valueLabelFormat\n}) => /*#__PURE__*/_jsxDEV(Box, {\n  sx: {\n    mb: 2\n  },\n  children: [/*#__PURE__*/_jsxDEV(Stack, {\n    direction: \"row\",\n    spacing: 1,\n    alignItems: \"center\",\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"body2\",\n      gutterBottom: true,\n      sx: {\n        flexGrow: 1\n      },\n      children: [label, \": \", valueLabelFormat ? valueLabelFormat(value) : value]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 9\n    }, this), tooltip && /*#__PURE__*/_jsxDEV(Tooltip, {\n      title: tooltip,\n      placement: \"top\",\n      children: /*#__PURE__*/_jsxDEV(InfoOutlinedIcon, {\n        color: \"action\",\n        sx: {\n          fontSize: '1rem'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 12\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 175,\n    columnNumber: 6\n  }, this), /*#__PURE__*/_jsxDEV(Slider, {\n    value: typeof value === 'number' ? value : min // Handle potential undefined value\n    ,\n    onChange: (_, newValue) => onChange(paramKey, newValue),\n    step: step,\n    min: min,\n    max: max,\n    marks: marks,\n    valueLabelDisplay: \"auto\",\n    size: \"small\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 185,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 174,\n  columnNumber: 3\n}, this);\n_c2 = ParameterSlider;\nconst ScenarioList = () => {\n  _s2();\n  const {\n    scenarios,\n    addScenario,\n    deleteScenario,\n    setActiveScenarioId,\n    toggleScenarioVisibility,\n    toggleScenarioEdit,\n    activeScenarioId\n  } = useScenariosContext();\n\n  // State for cost assumptions modal\n  const [costModalOpen, setCostModalOpen] = useState(false);\n  const handleOpenCostModal = () => {\n    setCostModalOpen(true);\n  };\n  const handleCloseCostModal = () => {\n    setCostModalOpen(false);\n  };\n  return /*#__PURE__*/_jsxDEV(Card, {\n    elevation: 2,\n    sx: {\n      height: '100%'\n    },\n    children: [\" \", /*#__PURE__*/_jsxDEV(CardContent, {\n      sx: {\n        display: 'flex',\n        flexDirection: 'column',\n        height: '100%'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Stack, {\n        direction: \"row\",\n        justifyContent: \"space-between\",\n        alignItems: \"center\",\n        mb: 2,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          component: \"h2\",\n          children: \"Scenarios\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Stack, {\n          direction: \"row\",\n          spacing: 1,\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            size: \"small\",\n            startIcon: /*#__PURE__*/_jsxDEV(SettingsIcon, {\n              sx: {\n                fontSize: 16\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 26\n            }, this),\n            onClick: handleOpenCostModal,\n            sx: {\n              bgcolor: 'grey.700',\n              '&:hover': {\n                bgcolor: 'grey.800'\n              },\n              fontSize: '0.75rem',\n              py: 0.5,\n              px: 1\n            },\n            children: \"Cost Assumptions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            startIcon: /*#__PURE__*/_jsxDEV(AddCircleOutlineIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 26\n            }, this),\n            onClick: addScenario,\n            size: \"small\",\n            children: \"Add Scenario\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 9\n      }, this), scenarios.length === 0 && /*#__PURE__*/_jsxDEV(Typography, {\n        color: \"text.secondary\",\n        align: \"center\",\n        sx: {\n          mt: 4\n        },\n        children: \"No scenarios created yet. Click \\\"Add Scenario\\\" to begin.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 12\n      }, this), /*#__PURE__*/_jsxDEV(List, {\n        sx: {\n          overflowY: 'auto',\n          flexGrow: 1\n        },\n        children: [\" \", scenarios.map((scenario, index) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: [index > 0 && /*#__PURE__*/_jsxDEV(Divider, {\n            component: \"li\",\n            variant: \"middle\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(ListItem, {\n            disablePadding: true,\n            sx: {\n              display: 'flex',\n              flexDirection: 'column',\n              // Stack content and form\n              alignItems: 'stretch',\n              // Stretch items full width\n              borderLeft: activeScenarioId === scenario.id ? `4px solid ${scenario.color}` : 'none',\n              bgcolor: activeScenarioId === scenario.id ? 'action.hover' : 'transparent',\n              pl: activeScenarioId === scenario.id ? 1.5 : 2,\n              // Adjust padding\n              transition: 'background-color 0.2s ease-in-out'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                display: 'flex',\n                alignItems: 'center',\n                py: 1,\n                cursor: 'pointer',\n                width: '100%'\n              },\n              onClick: () => setActiveScenarioId(scenario.id),\n              children: [/*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  width: 16,\n                  height: 16,\n                  borderRadius: '50%',\n                  bgcolor: scenario.isVisible ? scenario.color : 'grey.400',\n                  mr: 1.5,\n                  flexShrink: 0,\n                  border: '1px solid rgba(0,0,0,0.1)'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 288,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                primary: /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"subtitle1\",\n                  component: \"span\",\n                  noWrap: true,\n                  children: scenario.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 298,\n                  columnNumber: 24\n                }, this),\n                secondary: /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  color: \"text.secondary\",\n                  noWrap: true,\n                  children: scenario.description || 'No description'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 303,\n                  columnNumber: 24\n                }, this),\n                sx: {\n                  flexGrow: 1,\n                  mr: 1\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 296,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Stack, {\n                direction: \"row\",\n                spacing: 0.5,\n                sx: {\n                  ml: 'auto'\n                },\n                children: [/*#__PURE__*/_jsxDEV(Tooltip, {\n                  title: scenario.isVisible ? \"Hide from Chart\" : \"Show on Chart\",\n                  children: /*#__PURE__*/_jsxDEV(IconButton, {\n                    size: \"small\",\n                    onClick: e => {\n                      e.stopPropagation();\n                      toggleScenarioVisibility(scenario.id);\n                    },\n                    children: scenario.isVisible ? /*#__PURE__*/_jsxDEV(VisibilityIcon, {\n                      fontSize: \"small\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 313,\n                      columnNumber: 48\n                    }, this) : /*#__PURE__*/_jsxDEV(VisibilityOffIcon, {\n                      fontSize: \"small\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 313,\n                      columnNumber: 86\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 312,\n                    columnNumber: 24\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 311,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n                  title: scenario.isEditing ? \"Finish Editing\" : \"Edit Parameters\",\n                  children: /*#__PURE__*/_jsxDEV(IconButton, {\n                    size: \"small\",\n                    onClick: e => {\n                      e.stopPropagation();\n                      toggleScenarioEdit(scenario.id);\n                    },\n                    children: scenario.isEditing ? /*#__PURE__*/_jsxDEV(SaveIcon, {\n                      fontSize: \"small\",\n                      color: \"primary\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 318,\n                      columnNumber: 48\n                    }, this) : /*#__PURE__*/_jsxDEV(EditIcon, {\n                      fontSize: \"small\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 318,\n                      columnNumber: 95\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 317,\n                    columnNumber: 24\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 316,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n                  title: \"Delete Scenario\",\n                  children: /*#__PURE__*/_jsxDEV(IconButton, {\n                    size: \"small\",\n                    onClick: e => {\n                      e.stopPropagation();\n                      deleteScenario(scenario.id);\n                    },\n                    children: /*#__PURE__*/_jsxDEV(DeleteIcon, {\n                      fontSize: \"small\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 323,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 322,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 321,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 310,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 18\n            }, this), /*#__PURE__*/_jsxDEV(Collapse, {\n              in: scenario.isEditing,\n              timeout: \"auto\",\n              unmountOnExit: true,\n              children: /*#__PURE__*/_jsxDEV(ScenarioParametersForm, {\n                scenario: scenario\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 331,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 330,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 15\n          }, this)]\n        }, scenario.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CostAssumptionsModal, {\n        open: costModalOpen,\n        onClose: handleCloseCostModal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 222,\n    columnNumber: 5\n  }, this);\n};\n_s2(ScenarioList, \"ozolvwMHqn+Z6Q2y0ejpY5DwBJs=\", false, function () {\n  return [useScenariosContext];\n});\n_c3 = ScenarioList;\nexport default ScenarioList;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"ScenarioParametersForm\");\n$RefreshReg$(_c2, \"ParameterSlider\");\n$RefreshReg$(_c3, \"ScenarioList\");","map":{"version":3,"names":["React","useState","Box","Card","CardContent","Typography","List","ListItem","ListItemText","IconButton","Chip","Divider","Stack","Button","Collapse","TextField","Slider","Grid","Tooltip","DeleteIcon","EditIcon","SaveIcon","VisibilityIcon","VisibilityOffIcon","AddCircleOutlineIcon","SettingsIcon","InfoOutlinedIcon","useScenariosContext","CostAssumptionsModal","jsxDEV","_jsxDEV","ScenarioParametersForm","scenario","_s","_params$numUsers","_params$projectsPerUs","_params$getsPerImageI","_params$dataObjectsPe","_params$avgDataObject","_params$hotTierMonths","_params$coolTierMonth","_params$archiveTierMo","updateScenarioParameter","updateScenario","handleParamChange","param","value","id","handleNameChange","event","name","target","handleDescriptionChange","description","params","parameters","sx","p","borderTop","mt","children","container","spacing","item","xs","label","onChange","fullWidth","variant","size","mb","fileName","_jsxFileName","lineNumber","columnNumber","multiline","rows","md","display","gutterBottom","ParameterSlider","paramKey","numUsers","min","max","step","marks","projectsPerUserPerMonth","tooltip","getsPerImageInFirstMonth","dataObjectsPerProject","avgDataObjectSizeMB","valueLabelFormat","toFixed","type","hotTierMonths","e","Number","inputProps","coolTierMonths","archiveTierMonths","_c","direction","alignItems","flexGrow","title","placement","color","fontSize","_","newValue","valueLabelDisplay","_c2","ScenarioList","_s2","scenarios","addScenario","deleteScenario","setActiveScenarioId","toggleScenarioVisibility","toggleScenarioEdit","activeScenarioId","costModalOpen","setCostModalOpen","handleOpenCostModal","handleCloseCostModal","elevation","height","flexDirection","justifyContent","component","startIcon","onClick","bgcolor","py","px","length","align","overflowY","map","index","Fragment","disablePadding","borderLeft","pl","transition","cursor","width","borderRadius","isVisible","mr","flexShrink","border","primary","noWrap","secondary","ml","stopPropagation","isEditing","in","timeout","unmountOnExit","open","onClose","_c3","$RefreshReg$"],"sources":["/Users/Joo/01_Projects/blob_costs/src/components/ScenarioList.js"],"sourcesContent":["import React, { useState } from 'react';\nimport {\n  Box,\n  Card,\n  CardContent,\n  Typography,\n  List,\n  ListItem,\n  ListItemText,\n  IconButton,\n  Chip,\n  Divider,\n  Stack,\n  Button,\n  Collapse, // For expanding edit form\n  TextField,\n  Slider,\n  Grid,\n  Tooltip, // For tooltips on icons\n} from '@mui/material';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport EditIcon from '@mui/icons-material/Edit';\nimport SaveIcon from '@mui/icons-material/Save'; // To indicate saving changes\nimport VisibilityIcon from '@mui/icons-material/Visibility';\nimport VisibilityOffIcon from '@mui/icons-material/VisibilityOff';\nimport AddCircleOutlineIcon from '@mui/icons-material/AddCircleOutline';\nimport SettingsIcon from '@mui/icons-material/Settings';\nimport InfoOutlinedIcon from '@mui/icons-material/InfoOutlined'; // For info tooltips\nimport { useScenariosContext } from '../contexts/ScenariosContext';\nimport CostAssumptionsModal from './CostAssumptionsModal';\n\n// Component for individual scenario parameters (reusable)\nconst ScenarioParametersForm = ({ scenario }) => {\n  const { updateScenarioParameter, updateScenario } = useScenariosContext();\n\n  const handleParamChange = (param, value) => {\n    updateScenarioParameter(scenario.id, param, value);\n  };\n\n  const handleNameChange = (event) => {\n     updateScenario(scenario.id, { name: event.target.value });\n  };\n  \n  const handleDescriptionChange = (event) => {\n     updateScenario(scenario.id, { description: event.target.value });\n  };\n\n\n  // Check if parameters exist before trying to access them\n  const params = scenario.parameters || {};\n\n  return (\n     <Box sx={{ p: 2, borderTop: '1px solid rgba(0, 0, 0, 0.12)', mt: 1 }}>\n       <Grid container spacing={3}>\n         {/* Basic Info */}\n         <Grid item xs={12}>\n            <TextField\n              label=\"Scenario Name\"\n              value={scenario.name}\n              onChange={handleNameChange}\n              fullWidth\n              variant=\"outlined\"\n              size=\"small\"\n              sx={{ mb: 2 }}\n            />\n             <TextField\n              label=\"Description\"\n              value={scenario.description}\n              onChange={handleDescriptionChange}\n              fullWidth\n              multiline\n              rows={2}\n              variant=\"outlined\"\n              size=\"small\"\n            />\n         </Grid>\n\n         {/* Usage Parameters */}\n         <Grid item xs={12} md={6}>\n            <Typography variant=\"overline\" display=\"block\" gutterBottom>Usage</Typography>\n            <ParameterSlider\n              label=\"Number of Users\"\n              paramKey=\"numUsers\"\n              value={params.numUsers ?? 10} // Provide default if undefined\n              min={10} max={1000} step={10}\n              onChange={handleParamChange}\n              marks={[{ value: 10, label: '10' }, { value: 100, label: '100' }, { value: 1000, label: '1k' }]}\n            />\n            <ParameterSlider\n              label=\"New Projects/User/Month\"\n              paramKey=\"projectsPerUserPerMonth\"\n              value={params.projectsPerUserPerMonth ?? 1}\n              min={1} max={20} step={1}\n              onChange={handleParamChange}\n              marks={[{ value: 1, label: '1' }, { value: 10, label: '10' }, { value: 20, label: '20' }]}\n            />\n             <ParameterSlider\n              label=\"GETs/Object (1st month)\"\n              tooltip=\"Number of times each data object is read in its first month\"\n              paramKey=\"getsPerImageInFirstMonth\" // Keep key for now, maybe rename later\n              value={params.getsPerImageInFirstMonth ?? 10}\n              min={0} max={50} step={1}\n              onChange={handleParamChange}\n              marks={[{ value: 0, label: '0' }, { value: 15, label: '15' }, { value: 50, label: '50' }]}\n            />\n         </Grid>\n\n         {/* Data Parameters */}\n         <Grid item xs={12} md={6}>\n            <Typography variant=\"overline\" display=\"block\" gutterBottom>Data</Typography>\n            <ParameterSlider\n              label=\"Data Objects/Project\"\n              paramKey=\"dataObjectsPerProject\"\n              value={params.dataObjectsPerProject ?? 50}\n              min={10} max={500} step={10}\n              onChange={handleParamChange}\n              marks={[{ value: 10, label: '10' }, { value: 100, label: '100' }, { value: 500, label: '500' }]}\n            />\n             <ParameterSlider\n              label=\"Avg Object Size (MB)\"\n              paramKey=\"avgDataObjectSizeMB\"\n              value={params.avgDataObjectSizeMB ?? 1.0}\n              min={0.1} max={10.0} step={0.1}\n              onChange={handleParamChange}\n              marks={[{ value: 0.1, label: '0.1' }, { value: 1, label: '1' }, { value: 10, label: '10' }]}\n              valueLabelFormat={(value) => `${value.toFixed(1)} MB`}\n            />\n         </Grid>\n\n          {/* Storage Tiers */}\n         <Grid item xs={12}>\n             <Typography variant=\"overline\" display=\"block\" gutterBottom sx={{mt:1}}>Storage Tier Duration (Months)</Typography>\n             <Grid container spacing={2}>\n               <Grid item xs={4}>\n                 <TextField\n                   label=\"Hot\"\n                   type=\"number\"\n                   value={params.hotTierMonths ?? 1}\n                   onChange={(e) => handleParamChange('hotTierMonths', Number(e.target.value))}\n                   fullWidth size=\"small\" variant=\"outlined\"\n                   inputProps={{ min: 1, step: 1 }} // Hot must be >= 1\n                 />\n               </Grid>\n               <Grid item xs={4}>\n                 <TextField\n                   label=\"Cool\"\n                   type=\"number\"\n                   value={params.coolTierMonths ?? 3}\n                   onChange={(e) => handleParamChange('coolTierMonths', Number(e.target.value))}\n                   fullWidth size=\"small\" variant=\"outlined\"\n                   inputProps={{ min: 0, step: 1 }}\n                 />\n               </Grid>\n               <Grid item xs={4}>\n                 <TextField\n                   label=\"Archive\"\n                   type=\"number\"\n                   value={params.archiveTierMonths ?? 8}\n                   onChange={(e) => handleParamChange('archiveTierMonths', Number(e.target.value))}\n                   fullWidth size=\"small\" variant=\"outlined\"\n                   inputProps={{ min: 0, step: 1 }}\n                 />\n               </Grid>\n             </Grid>\n         </Grid>\n\n       </Grid>\n     </Box>\n  );\n};\n\n// Helper component for sliders to reduce repetition\nconst ParameterSlider = ({ label, tooltip, paramKey, value, min, max, step, marks, onChange, valueLabelFormat }) => (\n  <Box sx={{ mb: 2 }}>\n     <Stack direction=\"row\" spacing={1} alignItems=\"center\">\n        <Typography variant=\"body2\" gutterBottom sx={{ flexGrow: 1 }}>\n          {label}: {valueLabelFormat ? valueLabelFormat(value) : value}\n        </Typography>\n        {tooltip && (\n           <Tooltip title={tooltip} placement=\"top\">\n              <InfoOutlinedIcon color=\"action\" sx={{ fontSize: '1rem' }} />\n           </Tooltip>\n        )}\n     </Stack>\n    <Slider\n      value={typeof value === 'number' ? value : min} // Handle potential undefined value\n      onChange={(_, newValue) => onChange(paramKey, newValue)}\n      step={step}\n      min={min}\n      max={max}\n      marks={marks}\n      valueLabelDisplay=\"auto\"\n      size=\"small\"\n    />\n  </Box>\n);\n\n\nconst ScenarioList = () => {\n  const {\n    scenarios,\n    addScenario,\n    deleteScenario,\n    setActiveScenarioId,\n    toggleScenarioVisibility,\n    toggleScenarioEdit,\n    activeScenarioId,\n  } = useScenariosContext();\n\n  // State for cost assumptions modal\n  const [costModalOpen, setCostModalOpen] = useState(false);\n\n  const handleOpenCostModal = () => {\n    setCostModalOpen(true);\n  };\n\n  const handleCloseCostModal = () => {\n    setCostModalOpen(false);\n  };\n\n  return (\n    <Card elevation={2} sx={{ height: '100%' }}> {/* Make card take available height */}\n      <CardContent sx={{ display: 'flex', flexDirection: 'column', height: '100%' }}>\n        <Stack direction=\"row\" justifyContent=\"space-between\" alignItems=\"center\" mb={2}>\n          <Typography variant=\"h6\" component=\"h2\">\n            Scenarios\n          </Typography>\n          <Stack direction=\"row\" spacing={1}>\n            <Button\n              variant=\"contained\"\n              size=\"small\"\n              startIcon={<SettingsIcon sx={{ fontSize: 16 }} />}\n              onClick={handleOpenCostModal}\n              sx={{ \n                bgcolor: 'grey.700', \n                '&:hover': { bgcolor: 'grey.800' },\n                fontSize: '0.75rem',\n                py: 0.5,\n                px: 1\n              }}\n            >\n              Cost Assumptions\n            </Button>\n            <Button\n              variant=\"contained\"\n              startIcon={<AddCircleOutlineIcon />}\n              onClick={addScenario}\n              size=\"small\"\n            >\n              Add Scenario\n            </Button>\n          </Stack>\n        </Stack>\n\n        {scenarios.length === 0 && (\n           <Typography color=\"text.secondary\" align=\"center\" sx={{mt: 4}}>\n              No scenarios created yet. Click \"Add Scenario\" to begin.\n           </Typography>\n        )}\n\n        <List sx={{ overflowY: 'auto', flexGrow: 1 }}> {/* Allow list to scroll */}\n          {scenarios.map((scenario, index) => (\n            <React.Fragment key={scenario.id}>\n              {index > 0 && <Divider component=\"li\" variant=\"middle\" />}\n              <ListItem\n                disablePadding\n                sx={{ \n                  display: 'flex', \n                  flexDirection: 'column', // Stack content and form\n                  alignItems: 'stretch', // Stretch items full width\n                  borderLeft: activeScenarioId === scenario.id ? `4px solid ${scenario.color}` : 'none',\n                  bgcolor: activeScenarioId === scenario.id ? 'action.hover' : 'transparent',\n                  pl: activeScenarioId === scenario.id ? 1.5 : 2, // Adjust padding\n                  transition: 'background-color 0.2s ease-in-out',\n                }}\n              >\n                {/* Scenario Header (Clickable to set active) */}\n                 <Box \n                   sx={{ \n                     display: 'flex', \n                     alignItems: 'center', \n                     py: 1, \n                     cursor: 'pointer', \n                     width: '100%', \n                   }}\n                   onClick={() => setActiveScenarioId(scenario.id)}\n                 >\n                  <Box\n                    sx={{\n                      width: 16, height: 16, borderRadius: '50%',\n                      bgcolor: scenario.isVisible ? scenario.color : 'grey.400',\n                      mr: 1.5, flexShrink: 0,\n                      border: '1px solid rgba(0,0,0,0.1)'\n                    }}\n                  />\n                  <ListItemText\n                    primary={\n                       <Typography variant=\"subtitle1\" component=\"span\" noWrap>\n                          {scenario.name}\n                       </Typography>\n                    }\n                    secondary={\n                       <Typography variant=\"body2\" color=\"text.secondary\" noWrap>\n                          {scenario.description || 'No description'}\n                       </Typography>\n                    }\n                    sx={{ flexGrow: 1, mr: 1 }}\n                  />\n                  {/* Action Buttons */}\n                  <Stack direction=\"row\" spacing={0.5} sx={{ ml: 'auto' }}>\n                    <Tooltip title={scenario.isVisible ? \"Hide from Chart\" : \"Show on Chart\"}>\n                       <IconButton size=\"small\" onClick={(e) => { e.stopPropagation(); toggleScenarioVisibility(scenario.id); }}>\n                         {scenario.isVisible ? <VisibilityIcon fontSize=\"small\" /> : <VisibilityOffIcon fontSize=\"small\" />}\n                       </IconButton>\n                    </Tooltip>\n                    <Tooltip title={scenario.isEditing ? \"Finish Editing\" : \"Edit Parameters\"}>\n                       <IconButton size=\"small\" onClick={(e) => { e.stopPropagation(); toggleScenarioEdit(scenario.id); }}>\n                         {scenario.isEditing ? <SaveIcon fontSize=\"small\" color=\"primary\"/> : <EditIcon fontSize=\"small\" />}\n                       </IconButton>\n                    </Tooltip>\n                    <Tooltip title=\"Delete Scenario\">\n                      <IconButton size=\"small\" onClick={(e) => { e.stopPropagation(); deleteScenario(scenario.id); }}>\n                        <DeleteIcon fontSize=\"small\" />\n                      </IconButton>\n                    </Tooltip>\n                  </Stack>\n                </Box>\n\n                {/* Collapsible Edit Form */}\n                <Collapse in={scenario.isEditing} timeout=\"auto\" unmountOnExit>\n                  <ScenarioParametersForm scenario={scenario} />\n                </Collapse>\n              </ListItem>\n            </React.Fragment>\n          ))}\n        </List>\n\n        {/* Cost Assumptions Modal */}\n        <CostAssumptionsModal open={costModalOpen} onClose={handleCloseCostModal} />\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default ScenarioList; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}